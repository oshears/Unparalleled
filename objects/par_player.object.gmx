<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>friction=0.2;

var button_pressed;

button_pressed="";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (button_pressed=="left"){
/*bullet1 = instance_create(x,y,obj_bullet);
bullet2 = instance_create(x,y,obj_bullet);
bullet3 = instance_create(x,y,obj_bullet);
*/


/*bullet1.direction=180-2;
bullet2.direction=180;
bullet3.direction=180+2;*/

bullet1 = instance_create(x,y-8,obj_bullet);
bullet2 = instance_create(x,y+8,obj_bullet);

bullet1.direction=180;
bullet2.direction=180;
}
else if (button_pressed=="right"){
/*bullet1 = instance_create(x,y,obj_bullet);
bullet2 = instance_create(x,y,obj_bullet);
bullet3 = instance_create(x,y,obj_bullet);

bullet1.direction=0-2;
bullet2.direction=0;
bullet3.direction=0+2;*/

bullet1 = instance_create(x,y-8,obj_bullet);
bullet2 = instance_create(x,y+8,obj_bullet);

bullet1.direction=0;
bullet2.direction=0;
}
else if (button_pressed=="up"){
/*bullet1 = instance_create(x,y,obj_bullet);
bullet2 = instance_create(x,y,obj_bullet);
bullet3 = instance_create(x,y,obj_bullet);

bullet1.direction=90-2;
bullet2.direction=90;
bullet3.direction=90+2;*/

bullet1 = instance_create(x-8,y,obj_bullet);
bullet2 = instance_create(x+8,y,obj_bullet);

bullet1.direction=90;
bullet2.direction=90;
}
else if (button_pressed=="down"){
/*bullet1 = instance_create(x,y,obj_bullet);
bullet2 = instance_create(x,y,obj_bullet);
bullet3 = instance_create(x,y,obj_bullet);

bullet1.direction=270-2;
bullet2.direction=270;
bullet3.direction=270+2;*/

bullet1 = instance_create(x-8,y,obj_bullet);
bullet2 = instance_create(x+8,y,obj_bullet);

bullet1.direction=270;
bullet2.direction=270;
}
else if (button_pressed=="left_down"){
/*bullet1 = instance_create(x,y,obj_bullet);
bullet2 = instance_create(x,y,obj_bullet);
bullet3 = instance_create(x,y,obj_bullet);

bullet1.direction=180+45-2;
bullet2.direction=180+45;
bullet3.direction=180+45+2;*/

bullet1 = instance_create(x-16,y+6,obj_bullet);
bullet2 = instance_create(x-6,y+16,obj_bullet);

bullet1.direction=180+45;
bullet2.direction=180+45;
}
else if (button_pressed=="left_up"){
/*bullet1 = instance_create(x,y,obj_bullet);
bullet2 = instance_create(x,y,obj_bullet);
bullet3 = instance_create(x,y,obj_bullet);

bullet1.direction=180-45-2;
bullet2.direction=180-45;
bullet3.direction=180-45+2;*/

bullet1 = instance_create(x-16,y-6,obj_bullet);
bullet2 = instance_create(x-6,y-16,obj_bullet);

bullet1.direction=180-45;
bullet2.direction=180-45;
}
else if (button_pressed=="right_down"){
/*bullet1 = instance_create(x,y,obj_bullet);
bullet2 = instance_create(x,y,obj_bullet);
bullet3 = instance_create(x,y,obj_bullet);

bullet1.direction=0-45-2;
bullet2.direction=0-45;
bullet3.direction=0-45+2;*/
bullet1 = instance_create(x+6,y+16,obj_bullet);
bullet2 = instance_create(x+16,y+6,obj_bullet);

bullet1.direction=-45;
bullet2.direction=-45;
}
else if (button_pressed=="right_up"){
/*bullet1 = instance_create(x,y,obj_bullet);
bullet2 = instance_create(x,y,obj_bullet);
bullet3 = instance_create(x,y,obj_bullet);

bullet1.direction=0+45-2;
bullet2.direction=0+45;
bullet3.direction=0+45+2;*/
bullet1 = instance_create(x+16,y-6,obj_bullet);
bullet2 = instance_create(x+6,y-16,obj_bullet);

bullet1.direction=45;
bullet2.direction=45;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_angle=direction;

if (keyboard_check(ord('A'))) hspeed-=1;
if (keyboard_check(ord('D'))) hspeed+=1;
if (keyboard_check(ord('W'))) vspeed-=1;
if (keyboard_check(ord('S'))) vspeed+=1;

button_pressed="";

if (keyboard_check(vk_left)&amp;&amp;!keyboard_check(vk_up)&amp;&amp;!keyboard_check(vk_down)&amp;&amp;!keyboard_check(vk_right)){ 
    if (alarm[0]=-1) alarm = 10;
    button_pressed="left";
}

else if (keyboard_check(vk_right)&amp;&amp;!keyboard_check(vk_up)&amp;&amp;!keyboard_check(vk_down)&amp;&amp;!keyboard_check(vk_left)){
    if (alarm[0]=-1) alarm = 10;
    button_pressed="right";
}

else if (keyboard_check(vk_up)&amp;&amp;!keyboard_check(vk_left)&amp;&amp;!keyboard_check(vk_down)&amp;&amp;!keyboard_check(vk_right)){
    if (alarm[0]=-1) alarm = 10;
    button_pressed="up";
}

else if (keyboard_check(vk_down)&amp;&amp;!keyboard_check(vk_up)&amp;&amp;!keyboard_check(vk_left)&amp;&amp;!keyboard_check(vk_right)){
    if (alarm[0]=-1) alarm = 10;
    button_pressed="down";
}
else if (keyboard_check(vk_left)&amp;&amp;keyboard_check(vk_up)&amp;&amp;!keyboard_check(vk_down)&amp;&amp;!keyboard_check(vk_right)){ 
    if (alarm[0]=-1) alarm = 10;
    button_pressed="left_up";
}
else if (keyboard_check(vk_left)&amp;&amp;keyboard_check(vk_down)&amp;&amp;!keyboard_check(vk_right)&amp;&amp;!keyboard_check(vk_up)){ 
    if (alarm[0]=-1) alarm = 10;
    button_pressed="left_down";
}
else if (keyboard_check(vk_right)&amp;&amp;keyboard_check(vk_down)&amp;&amp;!keyboard_check(vk_left)&amp;&amp;!keyboard_check(vk_up)){ 
    if (alarm[0]=-1) alarm = 10;
    button_pressed="right_down";
}
else if (keyboard_check(vk_right)&amp;&amp;keyboard_check(vk_up)&amp;&amp;!keyboard_check(vk_down)&amp;&amp;!keyboard_check(vk_left)){ 
    if (alarm[0]=-1) alarm = 10;
    button_pressed="right_up";
}


if (speed&gt;6){
    speed=6;
}

x=min(x,room_width-16);
x=max(x,16);
y=min(y,room_height-16);
y=max(y,16);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
